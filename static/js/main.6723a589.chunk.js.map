{"version":3,"sources":["assets/tombo_icon_red_resized.png","assets/branko-stancevic-GI1hwOGqGtE-unsplash_resize.jpg","fonts/Raleway-Regular.ttf","style/styled-breaks.js","style/colors.js","Navigation.js","SocialLinkData.js","SocialLink.js","Header.js","Hero.js","Section.js","About.js","Skills.js","GoogleForm.js","Contact.js","Footer.js","App.js","serviceWorker.js","fonts/fonts.js","index.js"],"names":["module","exports","breakpoints","xs","sm","md","lg","xl","breaks","Object","keys","reduce","accumulator","label","css","StyledNavigation","styled","nav","Colors","NavigationMenu","ul","NavigationItem","li","NavigationLink","a","NavigationIcon","FontAwesomeIcon","Navigation","href","aria-label","icon","faAddressCard","faTools","target","rel","faBlog","faComment","socialLinkData","hrefLink","ariaLabel","fontawesomeIcon","faTwitter","color","faYoutube","faGithub","SocialLinks","className","props","socialLinks","map","item","SocialLinkItem","key","SocialLinkIcon","notext","SocialLinkText","span","StyledHeader","header","HeaderTextContainer","div","HeaderTitle","h1","sub","Header","as","SocialLink","HeroSection","section","HeroContainer","grow","HeroText","h2","large","HeroImage","img","Hero","src","tomboImage","alt","Section","SectionContainer","SectionContent","SectionBgImage","SectionBgIcon","SectionTitle","SectionHeading","h3","SectionText","p","About","id","codeImage","Skills","faCode","faPaintBrush","GoogleForm","state","submitted","handleInputChange","bind","handleSubmit","event","value","name","this","setState","Fragment","Form","action","onSubmit","htmlFor","Input","type","placeholder","required","onChange","rows","Submit","style","opacity","boxShadow","title","display","React","Component","form","input","TwitterHighlight","Contact","StyledFooter","footer","Footer","App","Boolean","window","location","hostname","match","createGlobalStyle","Raleway","GlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6723a589.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tombo_icon_red_resized.d423be1e.png\";","module.exports = __webpack_public_path__ + \"static/media/branko-stancevic-GI1hwOGqGtE-unsplash_resize.6abd8a75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Raleway-Regular.9942588a.ttf\";","//styled-breaks.js\nimport { css } from \"styled-components\";\n\nconst breakpoints = {\n  xs: \"0\",\n  sm: \"600px\",\n  md: \"960px\",\n  lg: \"1280px\",\n  xl: \"1920px\"\n};\n\nconst breaks = Object.keys(breakpoints).reduce((accumulator, label) => {\n  accumulator[label] = (...args) => css`\n    @media (min-width: ${breakpoints[label]}) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport default breaks;\n","export default {\n  materialTeal500: \"#009688\",\n  materialTeal300: \"#4db6ac\",\n  materialTeal100: \"#b2dfdb\",\n  twitter: \"#00acee\",\n  youtube: \"#c4302b\",\n  github: \"#333\"\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAddressCard,\n  faTools,\n  faBlog,\n  faComment\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nimport Colors from \"./style/colors\";\nimport breaks from \"./style/styled-breaks\";\n\nconst StyledNavigation = styled.nav`\n  // bottom-navigationと統合する\n  // 960px(for-md)より大きい場合は普通のNavigation\n  // 小さい場合はBottom Navigation\n\n  padding: 0 32px;\n  display: flex;\n  align-items: stretch; //headerいっぱいにnavigation__menuを広げる\n  background-color: ${Colors.materialTeal300};\n  position: fixed;\n  z-index: 10;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n\n  ${breaks.md`\n    position: static;\n    background-color: transparent;\n    width: auto;\n    flex-grow: 1;\n  `}\n`;\n\nconst NavigationMenu = styled.ul`\n  display: flex; // navigation__itemを横に並べる\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n`;\n\nconst NavigationItem = styled.li`\n  flex-grow: 1; // navigation__itemをmenuいっぱいになるまで伸ばす\n\n  &:hover {\n    background-color: ${Colors.materialTeal100};\n  }\n`;\n\nconst NavigationLink = styled.a`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  font-size: 1.6rem;\n  color: #333;\n\n  ${breaks.md`\n      flex-direction: row;\n      justify-content: center;\n      text-align: center;\n      height: 100%;\n      font-weight: bold;\n      color: black;\n    `}\n`;\n\nconst NavigationIcon = styled(FontAwesomeIcon)`\n  font-size: 2.4rem;\n  color: #333;\n  margin-bottom: 4px;\n\n  ${breaks.md`\n    display: none;\n  `}\n`;\n\nfunction Navigation() {\n  return (\n    <StyledNavigation>\n      <NavigationMenu>\n        <NavigationItem>\n          <NavigationLink href=\"#about\" aria-label=\"go to ABOUT\">\n            <NavigationIcon icon={faAddressCard}></NavigationIcon>\n            ABOUT\n          </NavigationLink>\n        </NavigationItem>\n        <NavigationItem>\n          <NavigationLink href=\"#skills\" aria-label=\"go to SKILLS\">\n            <NavigationIcon icon={faTools}></NavigationIcon>\n            SKILLS\n          </NavigationLink>\n        </NavigationItem>\n        <NavigationItem>\n          <NavigationLink\n            href=\"https://tombomemo.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            aria-label=\"go to BLOG\"\n          >\n            <NavigationIcon icon={faBlog}></NavigationIcon>\n            BLOG\n          </NavigationLink>\n        </NavigationItem>\n        <NavigationItem>\n          <NavigationLink href=\"#contact\" aria-label=\"go to CONTACT\">\n            <NavigationIcon icon={faComment}></NavigationIcon>\n            CONTACT\n          </NavigationLink>\n        </NavigationItem>\n      </NavigationMenu>\n    </StyledNavigation>\n  );\n}\n\nexport default Navigation;\n","// SocialLinkのデータをmapで処理して、一気に描画する\n\nimport {\n  faTwitter,\n  faYoutube,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst socialLinkData = [\n  {\n    hrefLink: \"https://twitter.com/Tombo__Gokuraku\",\n    ariaLabel: \"Twitter\",\n    fontawesomeIcon: faTwitter,\n    color: \"#00acee\"\n  },\n  {\n    hrefLink: \"https://www.youtube.com/channel/UCUVOtxzJS6kiIhDo1CEW4Og\",\n    ariaLabel: \"Youtube\",\n    fontawesomeIcon: faYoutube,\n    color: \"#c4302b\"\n  },\n  {\n    hrefLink: \"https://github.com/tombo-gokuraku\",\n    ariaLabel: \"GitHub\",\n    fontawesomeIcon: faGithub,\n    color: \"#333\"\n  }\n];\n\nexport default socialLinkData;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport breaks from \"./style/styled-breaks\";\nimport socialLinkData from \"./SocialLinkData\";\n\nconst SocialLinkContainer = ({ className, ...props }) => {\n  const socialLinks = socialLinkData.map(item => {\n    return (\n      <SocialLinkItem\n        href={item.hrefLink}\n        ariaLabel={item.ariaLabel}\n        key={item.hrefLink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <SocialLinkIcon\n          icon={item.fontawesomeIcon}\n          color={item.color}\n        ></SocialLinkIcon>\n        {/* notext属性がある場合はテキストを表示しない */}\n        {props.notext ? null : (\n          <SocialLinkText>{item.ariaLabel}</SocialLinkText>\n        )}\n      </SocialLinkItem>\n    );\n  });\n\n  return <div className={className}>{socialLinks}</div>;\n};\n\nconst SocialLinks = styled(SocialLinkContainer)`\n  display: flex;\n  align-items: center;\n`;\n\nconst SocialLinkItem = styled.a`\n  margin-right: 8px;\n\n  ${breaks.sm`\n    margin-right: 24px;\n  `}\n`;\n\nconst SocialLinkIcon = styled(FontAwesomeIcon)`\n  font-size: 1.8rem;\n  margin-right: 8px;\n  color: ${props => props.color || \"black\"};\n`;\n\nconst SocialLinkText = styled.span`\n  font-size: 1.8rem;\n  color: black;\n`;\n\nexport default SocialLinks;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport breaks from \"./style/styled-breaks\";\n\nimport Navigation from \"./Navigation\";\nimport SocialLinks from \"./SocialLink\";\n\nconst StyledHeader = styled.header`\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(255, 255, 255, 0.8);\n  position: fixed;\n  width: 100%;\n  z-index: 10;\n\n  ${breaks.sm`\n    padding: 0 32px;\n  `}\n`;\n\nconst HeaderTextContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst HeaderTitle = styled.h1`\n  font-size: ${props => (props.sub ? \"1.6rem\" : \"2rem\")};\n  font-weight: ${props => (props.sub ? \"300\" : \"\")};\n  display: ${props => (props.sub ? \"none\" : \"\")};\n  margin-right: 16px;\n\n  ${breaks.lg`\n    display: ${props => (props.sub ? \"block\" : \"\")}\n  `}\n`;\n\nfunction Header(props) {\n  return (\n    <StyledHeader>\n      <HeaderTextContainer>\n        <HeaderTitle>Tombo Gokuraku</HeaderTitle>\n        <HeaderTitle sub as=\"span\">\n          - Portfolio site\n        </HeaderTitle>\n      </HeaderTextContainer>\n      <Navigation />\n      <SocialLinks notext />\n    </StyledHeader>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport breaks from \"./style/styled-breaks\";\nimport Colors from \"./style/colors\";\nimport tomboImage from \"./assets/tombo_icon_red_resized.png\";\n\nfunction Hero(props) {\n  return (\n    <HeroSection>\n      <HeroContainer grow=\"2\">\n        <HeroText large>Web Engineer && VTuber</HeroText>\n        <HeroText>Tombo Gokuraku</HeroText>\n      </HeroContainer>\n      <HeroContainer grow=\"1\">\n        <HeroImage src={tomboImage} alt=\"トンボの画像\" />\n      </HeroContainer>\n    </HeroSection>\n  );\n}\n\nconst HeroSection = styled.section`\n  background-color: ${Colors.materialTeal300};\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 48px 16px 32px;\n\n  ${breaks.md`\n    padding: 96px 64px 32px;\n  `}\n`;\n\nconst HeroContainer = styled.div`\n  flex-grow: ${props => props.grow}\n  line-height: 1.8;\n  letter-spacing: 0.4rem;\n\n  ${breaks.md`\n    line-height: 1.5;\n    letter-spacing: 0.5rem;\n  `}\n`;\n\nconst HeroText = styled.h2`\n  // largeを指定した時に微妙にフォントサイズが大きくなるようにする\n  font-size: ${props => (props.large ? 1.8 + 0.4 : 1.8)}rem;\n  ${breaks.sm`\n    font-size: ${props => (props.large ? 2.8 + 0.4 : 2.8)}rem;\n  `}\n\n  ${breaks.md`\n    font-size: ${props => (props.large ? 3.6 + 0.4 : 3.6)}rem;\n  `}\n\n  ${breaks.lg`\n    font-size: ${props => (props.large ? 4.0 + 0.4 : 4.0)}rem;\n  `}\n`;\n\nconst HeroImage = styled.img`\n  width: 100%;\n  max-width: 250px;\n`;\n\nexport default Hero;\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport breaks from \"./style/styled-breaks\";\nimport Colors from \"./style/colors\";\n\nexport const Section = styled.section`\n  max-width: 1440px;\n  margin: 0 auto 32px;\n  padding: 32px 16px;\n\n  ${breaks.sm`\n    padding: 64px 32px;\n  `}\n\n  ${breaks.md`\n    margin: 0 auto 64px;\n    padding: 64px;\n  `}\n`;\n\nexport const SectionContainer = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin-bottom: 16px;\n\n  ${breaks.md`\n    flex-wrap: nowrap;\n  `}\n`;\n\nexport const SectionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  position: relative;\n\n  ${breaks.md`\n    width:50%;\n    margin-right: 16px;\n  `}\n`;\n\nexport const SectionBgImage = styled.img`\n  display: none;\n\n  ${breaks.md`\n    display: flex;\n    flex-grow: 1;\n    width: 50%;\n    margin: 0;\n    padding: 0;\n    opacity: 0.7;\n    filter: blur(2px);\n    object-fit: cover;\n  `}\n`;\n\nexport const SectionBgIcon = styled(FontAwesomeIcon)`\n  position: absolute;\n  left: 0;\n  top: 25%;\n  // react-fontawesomeが追加する.svg-inline--fa.fa-w-20 {width: 1.25em;} を上書きするため\n  && {\n    width: 100%;\n  }\n  font-size: 14rem;\n  text-align: center;\n  color: ${Colors.materialTeal500};\n  opacity: 0.3;\n\n  ${breaks.sm`\n    font-size: 12rem;\n  `}\n  ${breaks.md`\n    font-size: 18rem;\n  `}\n  ${breaks.lg`\n    font-size: 20rem;\n  `}\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 3rem;\n  margin-bottom: 12px;\n\n  ${breaks.md`\n    font-size: 6rem;\n    margin-bottom: 16px;\n  `}\n`;\n\nexport const SectionHeading = styled.h3`\n  font-size: 2rem;\n  margin-bottom: 8px;\n\n  ${breaks.md`\n      font-size: 4rem;\n      margin-bottom: 16px;\n      padding-top: 8px;\n  `}\n`;\n\nexport const SectionText = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 8px;\n  letter-spacing: 0.4rem;\n  line-height: 1.6;\n\n  ${breaks.md`\n    font-size: 2rem;\n    margin-bottom: 16px;\n    letter-spacing: 0.3rem;\n    line-height: 1.5;\n  `}\n`;\n","import React from \"react\";\n\nimport {\n  Section,\n  SectionContainer,\n  SectionContent,\n  SectionBgImage,\n  SectionTitle,\n  SectionHeading,\n  SectionText\n} from \"./Section\";\n\nimport SocialLinks from \"./SocialLink\";\n\nimport codeImage from \"./assets/branko-stancevic-GI1hwOGqGtE-unsplash_resize.jpg\";\n\nfunction About(props) {\n  return (\n    <Section id=\"about\">\n      <SectionContainer>\n        <SectionContent>\n          <SectionTitle>ABOUT</SectionTitle>\n          <SectionHeading>Tombo Gokuraku</SectionHeading>\n          <SectionText>\n            大企業を目指して大学院に進学し、\n            <wbr />\n            情報工学・ロボティクスを専攻するも、無い内定\n            <br />\n            オリジナルアプリを作るという野望を叶えるため、\n            <wbr />\n            Web系エンジニア && VTuberとして転生\n            <wbr />\n          </SectionText>\n          <SectionHeading>LINKS</SectionHeading>\n          <SocialLinks />\n        </SectionContent>\n        <SectionBgImage src={codeImage} alt=\"コーディング画面\" />\n      </SectionContainer>\n    </Section>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nimport {\n  Section,\n  SectionContainer,\n  SectionContent,\n  SectionBgIcon,\n  SectionTitle,\n  SectionHeading,\n  SectionText\n} from \"./Section\";\n\nimport { faCode, faPaintBrush } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Skills(props) {\n  return (\n    <Section id=\"skills\">\n      <SectionTitle>SKILLS</SectionTitle>\n      <SectionContainer>\n        <SectionContent>\n          <SectionHeading>Coding</SectionHeading>\n          <SectionText>\n            HTML / CSS / SASS(SCSS) / JavaScript / Vue / AWS / Amplify / Python\n            / NeoVim / tmux / Linux / Git\n          </SectionText>\n          <SectionText>\n            大学院時代に培ったC++/Pythonによる\n            <wbr />\n            ROSを使ったロボット制御の経験を活かし、\n            <wbr />\n            ProgateやfreeCodeCampなどを利用して\n            <wbr />\n            Web系の技術を独学しました。\n            <br />\n            最近ではVueを使ったWebサイト管理画面制作\n            <wbr />\n            プロジェクトにてデザインとコーディングを担当しています。\n            <wbr />\n          </SectionText>\n          <SectionBgIcon icon={faCode} />\n        </SectionContent>\n        <SectionContent>\n          <SectionHeading>Design</SectionHeading>\n          <SectionText>\n            Figma / Gimp / Inkscape / Adobe Illustrator / Adobe Photoshop /\n            Adobe Premiere Pro / Kdenlive / STUDIO\n          </SectionText>\n          <SectionText>\n            Figmaを使ったWebサイトのデザインや\n            <wbr /> Adobe Premiere Proを用いた\n            <wbr /> 動画編集などを得意としています。\n            <br />\n            最近ではNoCode(STUDIO)を用いた\n            <wbr />\n            Webサイト作成なども手がけています。\n            <wbr />\n          </SectionText>\n          <SectionBgIcon icon={faPaintBrush} />\n        </SectionContent>\n      </SectionContainer>\n    </Section>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Colors from \"./style/colors\";\nimport { SectionHeading } from \"./Section\";\n\nclass GoogleForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"entry.872297108\": \"\",\n      \"entry.814221295\": \"\",\n      \"entry.733628667\": \"\",\n      submitted: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form\n          name=\"inqform\"\n          id=\"inqform\"\n          action=\"https://docs.google.com/forms/d/e/1FAIpQLSdx4N9cWfy-Ny2d6mub4hR1crMSZXDL9TnYrxnM9S4slkG5sA/formResponse?\"\n          onSubmit={this.handleSubmit}\n          target=\"hidden_iframe\"\n        >\n          <SectionHeading>お問い合わせ</SectionHeading>\n          <label htmlFor=\"entry.872297108\">メールアドレス:</label>\n          <Input\n            type=\"email\"\n            value={this.state[\"entry.872297108\"]}\n            name=\"entry.872297108\"\n            id=\"entry.872297108\"\n            placeholder=\"メールアドレス\"\n            required\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"entry.814221295\">お名前:</label>\n          <Input\n            type=\"text\"\n            value={this.state[\"entry.814221295\"]}\n            name=\"entry.814221295\"\n            id=\"entry.814221295\"\n            placeholder=\"お名前\"\n            required\n            onChange={this.handleInputChange}\n          />\n          <label htmlFor=\"entry.733628667\">お問い合わせ内容:</label>\n          <Input\n            as=\"textarea\"\n            name=\"entry.733628667\"\n            id=\"entry.733628667\"\n            rows=\"6\"\n            placeholder=\"お問い合わせ内容\"\n            required\n            onChange={this.handleInputChange}\n            value={this.state[\"entry.733628667\"]}\n          />\n          <Submit\n            type=\"submit\"\n            name=\"\"\n            id=\"submit\"\n            value={this.state.submitted ? \"送信済み\" : \"送信\"}\n            style={\n              this.state.submitted\n                ? { opacity: 0.8, boxShadow: \"none\" }\n                : { opacity: 1.0 }\n            }\n          />\n        </Form>\n        {/* <!-- リダイレクトをブロックする --> */}\n        <iframe\n          title=\"hidden_iframe\"\n          name=\"hidden_iframe\"\n          id=\"hidden_iframe\"\n          style={{ display: \"none\" }}\n        ></iframe>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  font-size: 1.6rem;\n`;\n\nconst Input = styled.input`\n  font-size: 1.6rem;\n  border: 2px solid #eee;\n  border-radius: 5px;\n  margin-bottom: 12px;\n  padding: 8px;\n`;\n\nconst Submit = styled.input`\n  align-self: center;\n  width: 200px;\n  color: #333;\n  background-color: ${Colors.materialTeal300};\n  font-size: 1.6rem;\n  padding: 8px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px rgba(30, 30, 30, 0.5);\n`;\n\nexport default GoogleForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Colors from \"./style/colors\";\n\nimport { Section, SectionTitle, SectionText } from \"./Section\";\n\nimport GoogleForm from \"./GoogleForm\";\n\nfunction Contact(props) {\n  return (\n    <Section id=\"contact\">\n      <SectionTitle>CONTACT</SectionTitle>\n      <SectionText>\n        ご依頼・お問い合わせは\n        <wbr /> フォームまたは\n        <a href=\"https://twitter.com/Tombo__Gokuraku\">\n          <TwitterHighlight>Twitter DM</TwitterHighlight>\n        </a>\n        でご連絡ください。\n      </SectionText>\n      <GoogleForm />\n    </Section>\n  );\n}\n\nconst TwitterHighlight = styled.span`\n  color: black;\n  border-bottom: 3px solid ${Colors.twitter};\n`;\n\nexport default Contact;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport breaks from \"./style/styled-breaks\";\n\nfunction Footer(props) {\n  return <StyledFooter>©2020 TOMBO GOKURAKU PORTFOLIO.</StyledFooter>;\n}\n\nconst StyledFooter = styled.footer`\n  text-align: center;\n  font-size: 1.2rem;\n  color: #333;\n  padding: 32px;\n  margin-bottom: 64px;\n\n  ${breaks.md`\n    margin-bottom: 0;\n  `}\n`;\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Hero from \"./Hero\";\nimport About from \"./About\";\nimport Skills from \"./Skills\";\nimport Contact from \"./Contact\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Hero />\n        <About />\n        <Skills />\n        <Contact />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nimport Raleway from \"./Raleway-Regular.ttf\";\n\nexport default createGlobalStyle`\n  @font-face {\n    font-family: Raleway;\n    src: local('Raleway'), url(${Raleway}) format('truetype');\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport GlobalFonts from \"./fonts/fonts\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    font-size: 62.5%;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: Raleway, sans-serif;\n  }\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    text-decoration: none;\n  }\n\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalFonts />\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}